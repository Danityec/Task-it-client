[{"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\index.js":"1","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Router\\router.js":"2","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Header.js":"3","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Footer.js":"4","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Menu.js":"5","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\homePage\\HomePage.js":"6","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\template\\TemplateList.js":"7","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\chat\\ChatList.js":"8","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\chat\\Chat.js":"9","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\task\\Task.js":"10","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\template\\Template.js":"11","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Popup.js":"12","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\List.js":"13","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\ListItem.js":"14","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\chat\\Message.js":"15","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\admin\\AdminTask.js":"16","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\admin\\AdminHomePage.js":"17"},{"size":301,"mtime":1611671368837,"results":"18","hashOfConfig":"19"},{"size":1137,"mtime":1612002457480,"results":"20","hashOfConfig":"19"},{"size":2004,"mtime":1611673597335,"results":"21","hashOfConfig":"19"},{"size":324,"mtime":1611671368831,"results":"22","hashOfConfig":"19"},{"size":952,"mtime":1611992251630,"results":"23","hashOfConfig":"19"},{"size":2298,"mtime":1611992251600,"results":"24","hashOfConfig":"19"},{"size":3024,"mtime":1611935641460,"results":"25","hashOfConfig":"19"},{"size":3418,"mtime":1611936354724,"results":"26","hashOfConfig":"19"},{"size":2432,"mtime":1611919993545,"results":"27","hashOfConfig":"19"},{"size":3588,"mtime":1612001979461,"results":"28","hashOfConfig":"19"},{"size":1080,"mtime":1611999198661,"results":"29","hashOfConfig":"19"},{"size":1467,"mtime":1611999739420,"results":"30","hashOfConfig":"19"},{"size":584,"mtime":1611992807456,"results":"31","hashOfConfig":"19"},{"size":1186,"mtime":1611932302564,"results":"32","hashOfConfig":"19"},{"size":344,"mtime":1611919993576,"results":"33","hashOfConfig":"19"},{"size":2366,"mtime":1612001424421,"results":"34","hashOfConfig":"19"},{"size":2184,"mtime":1611992251544,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"10ovlwd",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\index.js",[],["75","76"],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Router\\router.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Header.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Footer.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Menu.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\homePage\\HomePage.js",["77"],"import React, {useEffect, useState} from 'react';\r\nimport './HomePage.css'\r\nimport Menu from \"../shared/Menu\";\r\nimport {ButtonBase, CardActions, IconButton} from \"@material-ui/core\";\r\nimport List from \"../shared/List\";\r\nimport ArrowForwardIosRoundedIcon from \"@material-ui/icons/ArrowForwardIosRounded\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst userId = '5fecb592690ca7935ccfd762'\r\n\r\nconst HomePage = (props) => {\r\n    const [taskList, setTaskList] = useState([]);\r\n    const [titleList, setTitleList] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetch(`http://127.0.0.1:3000/api/tasks?userID=${userId}`)\r\n            .then(response => response.json())\r\n            .then(result => setTaskList(result))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        taskList.forEach((task) => {\r\n            setTitleList(prevState => ({\r\n                ...prevState, [task._id]: `${task.name}`\r\n            }));\r\n        })\r\n    }, [taskList])\r\n\r\n    const checkboxToggle = (id, completed) => {\r\n        console.log('checkboxToggle: ' + id)\r\n        const body = {\r\n            completed: completed\r\n        }\r\n        fetch(`http://127.0.0.1:3000/api/tasks/${id}`,\r\n            {headers: {'Content-Type': 'application/json'}, method: 'PUT', body: JSON.stringify(body)})\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Menu goBack={false}>\r\n                <Link to='/new-task'>\r\n                    <ButtonBase centerRipple={true}><p style={{width: '180px'}}>Create New Task</p></ButtonBase>\r\n                </Link>\r\n                <Link to='/chats'>\r\n                    <ButtonBase centerRipple={true} onClick={null} style={{ backgroundColor:'#2A73CC'}}><p style={{width: '100px'}}>Chat</p></ButtonBase>\r\n                </Link>\r\n            </Menu>\r\n            <div className={'task-list'}>\r\n                <List checkboxes={true} checkboxToggle={checkboxToggle} dataList={taskList} titleList={titleList}\r\n                      pathName={'/task'}>\r\n                    <IconButton>\r\n                        <ArrowForwardIosRoundedIcon/>\r\n                    </IconButton>\r\n                </List>\r\n            </div>\r\n        </>)\r\n}\r\n\r\nexport default HomePage","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\template\\TemplateList.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\chat\\ChatList.js",["78"],"import React, {useEffect, useState} from 'react';\r\nimport './ChatList.css'\r\nimport Menu from \"../shared/Menu\";\r\nimport {ButtonBase, IconButton} from \"@material-ui/core\";\r\nimport List from \"../shared/List\";\r\nimport Popup from \"../shared/Popup\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ArrowForwardIosRoundedIcon from \"@material-ui/icons/ArrowForwardIosRounded\";\r\n\r\nconst userId = '5fecb592690ca7935ccfd762'\r\nconst userID1 = '5fecb592690ca7935ccfd762'\r\nconst userID2 = '5fea10ee690ca7935c117922'\r\n\r\nconst ChatList = (props) => {\r\n    const [chatList, setChatList] = useState([]);\r\n    const [titleList, setTitleList] = useState({});\r\n    const [open, setOpen] = useState(false);\r\n    const [emailChat, setEmailChat] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetch(`http://127.0.0.1:3000/api/chats?userID=${userId}`)\r\n            .then(response => response.json())\r\n            .then(result => setChatList(result))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let users = []\r\n        chatList.forEach(chat => {\r\n            if (chat['userID1'] === userId)\r\n                users.push(chat['userID2'])\r\n            else\r\n                users.push(chat['userID1'])\r\n        })\r\n\r\n        users.forEach((user, index) => {\r\n            fetch(`http://127.0.0.1:3000/api/users/${user}`)\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    setTitleList(prevState => ({\r\n                        ...prevState, [chatList[index]._id]: `${result.firstName} ${result.lastName}`\r\n                    }));\r\n                })\r\n        })\r\n    }, [chatList])\r\n\r\n   \r\n    const addNewChat = () => { \r\n        const data = { email: emailChat, userID: userID1, userID: userID2};\r\n        console.log(data)\r\n            fetch(`http://localhost:3000/api/chats/`, {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify(data),\r\n            })\r\n                .then(response => response.json())\r\n                .then(result => {handleClose()});\r\n\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n\r\n    };\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Menu goBack={true}>\r\n                <ButtonBase centerRipple={true} onClick={handleClickOpen}><p style={{width: '150px'}}>New Chat</p></ButtonBase>\r\n            </Menu>\r\n            <div className={'chat-list'}>\r\n                <List dataList={chatList} titleList={titleList} pathName={'/chat'}>\r\n                    <IconButton>\r\n                        <ArrowForwardIosRoundedIcon/>\r\n                    </IconButton>\r\n                </List>\r\n\r\n                <Popup onSubmit={addNewChat} title={\"New Chat\"} text={\"Open a new chat with another TaskIt user\"} open={open}>\r\n                    <TextField key={1} className=\"inputEmail\"\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"Email\"\r\n                            label=\"Email\"\r\n                            type=\"Email\"\r\n                            onChange={e => setEmailChat(e.target.value)}\r\n                            fullWidth\r\n                            value={emailChat}>\r\n                    </TextField>\r\n                </Popup>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatList","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\chat\\Chat.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\task\\Task.js",["79","80"],"import React, { useEffect, useState } from 'react';\r\nimport './Task.css';\r\nimport Menu from \"../shared/Menu\";\r\nimport { ButtonBase, IconButton } from \"@material-ui/core\";\r\nimport List from \"../shared/List\";\r\nimport Popup from \"../shared/Popup\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst Task = (props) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [nameSubTask, setNameSubTask] = useState(\"\");\r\n    const [task, setTask] = useState(props.location.data);\r\n    const [titleList, setTitleList] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n        setTask(props.location.data)\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        task.subTask.forEach((subTask) => {\r\n            setTitleList(prevState => ({\r\n                ...prevState, [subTask[\"_id\"]]: `${subTask[\"name\"]}`\r\n            }));\r\n        })\r\n    }, [task])\r\n\r\n\r\n    const addNewSubTask = () => {\r\n        const data = { name: nameSubTask };\r\n        console.log(data)\r\n        fetch(`http://localhost:3000/api/subtasks/${task._id}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                handleClose();\r\n                setTask(result);\r\n            });\r\n\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n\r\n    };\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const checkboxToggle = (id, completed) => {\r\n        const body = {\r\n            completed: completed\r\n        }\r\n        fetch(`http://localhost:3000/api/subtasks/${task._id}/${id}`,\r\n            { headers: { 'Content-Type': 'application/json' }, method: 'PUT', body: JSON.stringify(body) })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n            })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"Task\">\r\n            <Menu goBack={true}>\r\n                <ButtonBase centerRipple={true} onClick={handleClickOpen}><p style={{ width: '200px' }}>Creat New SubTask</p></ButtonBase>\r\n                {task.templateID ? (\r\n                    <ButtonBase style={{ backgroundColor: '#2A73CC' }} centerRipple={true} onClick={handleClickOpen}><p style={{ width: '200px' }}>Write a Review</p></ButtonBase>\r\n                ) : null}\r\n            </Menu>\r\n\r\n            <div className=\"taskList\">\r\n                <TextField className=\"infoTask\"></TextField>\r\n                <List checkboxes={true} checkboxeToggle={checkboxToggle} dataList={task.subTask} titleList={titleList}>\r\n                    <EditIcon fontSize=\"large\" style={{ color: '#FFDD65' }} />\r\n                    <DeleteIcon fontSize=\"large\" style={{ color: '#FF5C5C' }} />\r\n                </List>\r\n                <Popup onSubmit={addNewSubTask} title={\"Create Subtask\"} open={open}>\r\n                    <TextField key={1} className=\"inputNameSubTask\"\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"Name\"\r\n                        label=\"Name\"\r\n                        type=\"Name\"\r\n                        onChange={e => setNameSubTask(e.target.value)}\r\n                        fullWidth\r\n                        value={nameSubTask}>\r\n                    </TextField>\r\n                </Popup>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\template\\Template.js",["81"],"import React from 'react';\r\nimport './TemplateList.css';\r\nimport './Template.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst Template = (props) => {\r\n    \r\n\r\n    const eachSubTask = (index) => {\r\n        return  <div className=\"nameSubTask\">{index.name}</div>\r\n    }\r\n   \r\n    return (\r\n        <div className=\"template\">\r\n            \r\n            <div className=\"titleTask\">\r\n                <div className=\"nameTask\">{props.item.name}</div>\r\n                <Button className=\"iconeChoose\" aria-label=\"edit\" variant=\"contained\" style={{ padding: \"1px\"}, { backgroundColor:'#2A73CC'}} >Choose</Button >\r\n            </div>\r\n\r\n            <div className=\"titleCategory\">\r\n                <div className=\"nameCategory\" >{props.item.category}</div>\r\n            </div>\r\n\r\n            <div className=\"titleSubTask\">\r\n                {props.item.subTask.map(eachSubTask)}\r\n                {props.children}\r\n                <div className=\"nameSubTask\" ></div>\r\n            </div>\r\n            \r\n        </div>\r\n        )   \r\n    \r\n    \r\n}\r\n\r\nexport default Template;","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Popup.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\List.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\ListItem.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\chat\\Message.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\admin\\AdminTask.js",["82"],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\admin\\AdminHomePage.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":4,"column":21,"nodeType":"89","messageId":"90","endLine":4,"endColumn":32},{"ruleId":"91","severity":1,"message":"92","line":48,"column":59,"nodeType":"93","messageId":"94","endLine":48,"endColumn":65},{"ruleId":"87","severity":1,"message":"95","line":4,"column":22,"nodeType":"89","messageId":"90","endLine":4,"endColumn":32},{"ruleId":"96","severity":1,"message":"97","line":20,"column":8,"nodeType":"98","endLine":20,"endColumn":10,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":19,"column":111,"nodeType":"102","messageId":"103","endLine":19,"endColumn":112},{"ruleId":"96","severity":1,"message":"104","line":19,"column":8,"nodeType":"98","endLine":19,"endColumn":10,"suggestions":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'userID'.","ObjectExpression","unexpected","'IconButton' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.data'. Either include it or remove the dependency array. If 'setTask' needs the current value of 'props.location.data', you can also switch to useReducer instead of useState and read 'props.location.data' in the reducer.","ArrayExpression",["108"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'props.location.id'. Either include it or remove the dependency array.",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [props.location.data]",{"range":"114","text":"115"},"Update the dependencies array to be: [props.location.id]",{"range":"116","text":"117"},[719,721],"[props.location.data]",[681,683],"[props.location.id]"]