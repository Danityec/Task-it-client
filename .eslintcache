[{"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\index.js":"1","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Router\\router.js":"2","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Header.js":"3","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Footer.js":"4","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Menu.js":"5","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\homePage\\HomePage.js":"6","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\template\\TemplateList.js":"7","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\chat\\ChatList.js":"8","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\chat\\Chat.js":"9","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\task\\Task.js":"10","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\template\\Template.js":"11","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Popup.js":"12","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\List.js":"13","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\ListItem.js":"14","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\chat\\Message.js":"15","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\admin\\AdminTask.js":"16","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\admin\\AdminHomePage.js":"17"},{"size":301,"mtime":1611671368837,"results":"18","hashOfConfig":"19"},{"size":1137,"mtime":1612002457480,"results":"20","hashOfConfig":"19"},{"size":2004,"mtime":1611673597335,"results":"21","hashOfConfig":"19"},{"size":324,"mtime":1611671368831,"results":"22","hashOfConfig":"19"},{"size":952,"mtime":1611992251630,"results":"23","hashOfConfig":"19"},{"size":2201,"mtime":1612022373537,"results":"24","hashOfConfig":"19"},{"size":2391,"mtime":1612022373716,"results":"25","hashOfConfig":"19"},{"size":4267,"mtime":1612029616842,"results":"26","hashOfConfig":"19"},{"size":2432,"mtime":1611919993545,"results":"27","hashOfConfig":"19"},{"size":9152,"mtime":1612023983950,"results":"28","hashOfConfig":"19"},{"size":809,"mtime":1612013048149,"results":"29","hashOfConfig":"19"},{"size":1916,"mtime":1612022373700,"results":"30","hashOfConfig":"19"},{"size":584,"mtime":1611992807456,"results":"31","hashOfConfig":"19"},{"size":1283,"mtime":1612013048123,"results":"32","hashOfConfig":"19"},{"size":344,"mtime":1611919993576,"results":"33","hashOfConfig":"19"},{"size":3637,"mtime":1612027717610,"results":"34","hashOfConfig":"19"},{"size":3529,"mtime":1612032694822,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"10ovlwd",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\index.js",[],["76","77"],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Router\\router.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Header.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Footer.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Menu.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\homePage\\HomePage.js",["78"],"import React, {useEffect, useState} from 'react';\r\nimport './HomePage.css'\r\nimport Menu from \"../shared/Menu\";\r\nimport {ButtonBase, CardActions, IconButton} from \"@material-ui/core\";\r\nimport List from \"../shared/List\";\r\nimport ArrowForwardIosRoundedIcon from \"@material-ui/icons/ArrowForwardIosRounded\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst userId = '5fecb592690ca7935ccfd762'\r\n\r\nconst HomePage = (props) => {\r\n    const [taskList, setTaskList] = useState([]);\r\n    const [titleList, setTitleList] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetch(`http://127.0.0.1:3000/api/tasks?userID=${userId}`)\r\n            .then(response => response.json())\r\n            .then(result => setTaskList(result))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        taskList.forEach((task) => {\r\n            setTitleList(prevState => ({\r\n                ...prevState, [task._id]: `${task.name}`\r\n            }));\r\n        })\r\n    }, [taskList])\r\n\r\n    const checkboxToggle = (id, completed) => {\r\n        const body = {\r\n            completed: completed\r\n        }\r\n        fetch(`http://127.0.0.1:3000/api/tasks/${id}`,\r\n            {headers: {'Content-Type': 'application/json'}, method: 'PUT', body: JSON.stringify(body)})\r\n            .then(response => response.json())\r\n            .then(result => {})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Menu goBack={false}>\r\n                <Link to='/new-task'>\r\n                    <ButtonBase centerRipple={true}><p style={{width: '180px'}}>Create New Task</p></ButtonBase>\r\n                </Link>\r\n                <Link to='/chats'>\r\n                    <ButtonBase centerRipple={true} onClick={null} style={{ backgroundColor:'#2A73CC'}}><p style={{width: '100px'}}>Chat</p></ButtonBase>\r\n                </Link>\r\n            </Menu>\r\n            <div className={'task-list'}>\r\n                <List checkboxes={true} checkboxToggle={checkboxToggle} dataList={taskList} titleList={titleList}\r\n                      pathName={'/task'}>\r\n                    <IconButton>\r\n                        <ArrowForwardIosRoundedIcon/>\r\n                    </IconButton>\r\n                </List>\r\n            </div>\r\n        </>)\r\n}\r\n\r\nexport default HomePage","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\template\\TemplateList.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\chat\\ChatList.js",["79"],"import React, {useEffect, useState} from 'react';\r\nimport './ChatList.css'\r\nimport Menu from \"../shared/Menu\";\r\nimport {ButtonBase, IconButton} from \"@material-ui/core\";\r\nimport List from \"../shared/List\";\r\nimport Popup from \"../shared/Popup\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ArrowForwardIosRoundedIcon from \"@material-ui/icons/ArrowForwardIosRounded\";\r\n\r\nconst userId = '5fecb592690ca7935ccfd762'\r\nconst userID2 = '5fea10ee690ca7935c117922'\r\n\r\nconst ChatList = (props) => {\r\n    const [chatList, setChatList] = useState([]);\r\n    const [titleList, setTitleList] = useState({});\r\n    const [open, setOpen] = useState(false);\r\n    const [emailList, setEmailList] = useState([]);\r\n    const [emailValue, setEmailValue] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(`http://127.0.0.1:3000/api/chats?userID=${userId}`)\r\n            .then(response => response.json())\r\n            .then(result => setChatList(result))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetch(`http://127.0.0.1:3000/api/users`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                result.forEach(user => {\r\n                    setEmailList(prevArray => [...prevArray, {title: user['email']}])\r\n                })\r\n            })\r\n    }, [chatList])\r\n\r\n\r\n    useEffect(() => {\r\n        let users = []\r\n        chatList.forEach(chat => {\r\n            if (chat['userID1'] === userId)\r\n                users.push(chat['userID2'])\r\n            else\r\n                users.push(chat['userID1'])\r\n        })\r\n\r\n        users.forEach((user, index) => {\r\n            fetch(`http://127.0.0.1:3000/api/users/${user}`)\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    setTitleList(prevState => ({\r\n                        ...prevState, [chatList[index]._id]: `${result.firstName} ${result.lastName}`\r\n                    }));\r\n                })\r\n        })\r\n    }, [chatList])\r\n\r\n    const addNewChat = () => {\r\n        fetch(`http://127.0.0.1:3000/api/users?email=${emailValue.title}`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                const body = {userID1: userId, userID2: result['_id']};\r\n                fetch(`http://localhost:3000/api/chats/`, {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify(body),\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(result => {\r\n                        setOpen(false)\r\n                        setChatList(result)\r\n                    });\r\n            })\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Menu goBack={true}>\r\n                <ButtonBase centerRipple={true} onClick={() => setOpen(true)}><p style={{width: '150px'}}>New Chat</p>\r\n                </ButtonBase>\r\n            </Menu>\r\n            <div className={'chat-list'}>\r\n                <List dataList={chatList} titleList={titleList} pathName={'/chat'}>\r\n                    <IconButton>\r\n                        <ArrowForwardIosRoundedIcon/>\r\n                    </IconButton>\r\n                </List>\r\n                <Popup onSubmit={addNewChat} closePopup={() => {\r\n                    setOpen(false)\r\n                }} title={\"New Chat\"} open={open} isDelete={false}>\r\n                    <p>open a new chat with another TaskIt user</p>\r\n                    {/*<TextField className=\"chat-email-input\" label=\"Email\" onChange={e => setEmailChat(e.target.value)}*/}\r\n                    {/*           fullWidth value={emailChat}/>*/}\r\n                    <Autocomplete\r\n                        style={{width: '100%', paddingTop: '5%'}}\r\n                        options={emailList}\r\n                        getOptionLabel={(emailList) => emailList.title}\r\n                        value={emailValue}\r\n                        onChange={(e, newValue) => {setEmailValue(newValue)}}\r\n                        renderInput={(params) => <TextField {...params} label=\"Email\"/>}\r\n                    />\r\n                </Popup>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatList","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\chat\\Chat.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\task\\Task.js",["80","81","82","83","84","85","86","87","88"],"import React, { useEffect, useState } from 'react';\r\nimport './Task.css';\r\nimport Menu from \"../shared/Menu\";\r\nimport { ButtonBase, IconButton } from \"@material-ui/core\";\r\nimport List from \"../shared/List\";\r\nimport Popup from \"../shared/Popup\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Button from '@material-ui/core/Button';\r\nimport { TramRounded } from '@material-ui/icons';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\n\r\n\r\nconst userId = '5fecb592690ca7935ccfd762'\r\n\r\nconst Task = (props) => {\r\n    const [openAdd, setOpenAdd] = useState(false);\r\n    const [openEdit, setOpenEdit] = useState(false);\r\n    const [openDelete, setOpenDelete] = useState(false);\r\n    const [openReview, setOpenReview] = useState(false);\r\n    const [openEditTask, setOpenEditTask] = useState(false);\r\n    const [openDeleteTask, setOpenDeleteTask] = useState(false);\r\n\r\n    const [nameSubTask, setNameSubTask] = useState(\"\");\r\n    const [task, setTask] = useState(props.location.data);\r\n\r\n    const [titleList, setTitleList] = useState({});\r\n\r\n    const [newNameSubTask, setNewNameSubTask] = useState(\"\");\r\n    // const [subTask, setSubTask] = useState(props.location.data);\r\n\r\n    const [taskName, setTaskName] = useState(\"\");\r\n    const [taskCategory, setTaskCategory] = useState(\"\");\r\n\r\n    const [titleReview, setTitleReview] = useState(\"\");\r\n    const [bodyReview, setBodyReview] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setTask(props.location.data)\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        task.subTask.forEach((subTask) => {\r\n            setTitleList(prevState => ({\r\n                ...prevState, [subTask[\"_id\"]]: `${subTask[\"name\"]}`\r\n            }));\r\n        })\r\n    }, [task])\r\n\r\n    // useEffect(() => {\r\n    //     setSubTask(props.location.data)\r\n    // }, [])\r\n\r\n    const addReview = () => {\r\n        const data = { title: titleReview, reviewBody: bodyReview, userID: userId , templateID: task.templateID };\r\n        console.log(data)\r\n        fetch(`http://localhost:3000/api/reviews`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setOpenReview(false);\r\n            });\r\n    }\r\n    const editTask = () => {\r\n        const data = { name: taskName, category: taskCategory, userID: userId };\r\n        console.log(data)\r\n        fetch(`http://localhost:3000/api/subtasks/${task._id}/${task.subTask._id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setOpenEdit(false);\r\n                // setSubTask(result);\r\n            });\r\n    }\r\n\r\n    const addNewSubTask = () => {\r\n        const data = { name: nameSubTask };\r\n        fetch(`http://localhost:3000/api/subtasks/${task._id}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setOpenAdd(false);\r\n                setTask(result);\r\n            });\r\n\r\n    }\r\n\r\n    const editSubTask = () => {\r\n        const data = { name: newNameSubTask };\r\n        console.log(data)\r\n        fetch(`http://localhost:3000/api/subtasks/${task._id}/${task.subTask._id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setOpenEdit(false);\r\n                // setSubTask(result);\r\n            });\r\n    }\r\n\r\n    const DeleteSubTask = () => {\r\n        const data = { name: nameSubTask };\r\n        // console.log(data)\r\n        fetch(`http://localhost:3000/api/subtasks/${task._id}/${task.subTask._id}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setOpenDelete(false);\r\n\r\n            });\r\n    }\r\n\r\n    const checkboxToggle = (id, completed) => {\r\n        const body = {\r\n            completed: completed\r\n        }\r\n        fetch(`http://localhost:3000/api/subtasks/${task._id}/${id}`,\r\n            { headers: { 'Content-Type': 'application/json' }, method: 'PUT', body: JSON.stringify(body) })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n            })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"Task\">\r\n            <Menu goBack={true}>\r\n                <ButtonBase centerRipple={true} onClick={() => { setOpenAdd(true) }}><p style={{ width: '200px' }}>Creat New SubTask</p></ButtonBase>\r\n                {task.templateID ? (\r\n                    <ButtonBase style={{ backgroundColor: '#2A73CC' }} centerRipple={true} onClick={() => { setOpenReview(true) }}><p style={{ width: '200px' }}>Write a Review</p></ButtonBase>\r\n                ) : null}\r\n            </Menu>\r\n\r\n            <div className=\"taskList\">\r\n                <div className=\"infoTask\">\r\n                    <h1 className=\"infoTitle\"  >\r\n                        <EditIcon onSubmit={editTask} fontSize=\"large\" style={{ color: '#FFDD65' }} title={\"Create Subtask\"} text={\"Share the task with TaskIt users\"} onClick={openEditTask}></EditIcon>\r\n                        <DeleteIcon fontSize=\"large\" style={{ color: '#FF5C5C' }} onClick={openDeleteTask}></DeleteIcon>\r\n                    </h1>\r\n                    <h2 className=\"infoCategory\"></h2>\r\n                    <h3 className=\"infoShared\"></h3>\r\n                </div>\r\n\r\n                <Popup onSubmit={addNewSubTask} title={\"Create Subtask\"} open={openAdd}>\r\n                    <TextField key={1} className=\"inputNameSubTask\"\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"Name\"\r\n                        label=\"Name\"\r\n                        type=\"Name\"\r\n                        onChange={e => setNameSubTask(e.target.value)}\r\n                        fullWidth\r\n                        value={nameSubTask}>\r\n                    </TextField>\r\n                </Popup>\r\n                <Popup onSubmit={addReview} title={\"Review the task Template\"} open={openReview}>\r\n                    <TextField key={1}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"Title\"\r\n                        label=\"Title\"\r\n                        type=\"Title\"\r\n                        onChange={e => setTitleReview(e.target.value)}\r\n                        fullWidth\r\n                        value={titleReview}>\r\n                    </TextField>\r\n                    <TextareaAutosize key={2} className=\"bodyReview\"\r\n                        rowsMax={4}\r\n                        aria-label=\"maximum height\"\r\n                        placeholder=\"Reviews\"\r\n                        onChange={e => setBodyReview(e.target.value)}\r\n                        fullWidth\r\n                        value={bodyReview}>\r\n                    </TextareaAutosize>\r\n                </Popup>\r\n                <Popup onSubmit={DeleteSubTask} title={\"Delete Subtask\"} open={openDelete} text={\"Are you sure you want to delete this subtask?\"}>\r\n                    <text>the action cannot be undone!</text>\r\n                    <Button className=\"buttonOK\" variant=\"contained\" style={{ backgroundColor: '#FF5C5C' }} onClick={props.onSubmit}>No, Save my subtask</Button>\r\n                </Popup>\r\n                <Popup onSubmit={editSubTask} title={\"Edit Subtask\"} open={openEdit}>\r\n                    <TextField key={2} className=\"inputEditSubTask\"\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"Name\"\r\n                        label=\"Name\"\r\n                        type=\"Name\"\r\n                        value={newNameSubTask}\r\n                        onChange={e => setNewNameSubTask(e.target.value)}\r\n                        fullWidth>\r\n                    </TextField>\r\n                </Popup>\r\n                <List checkboxes={true} checkboxeToggle={checkboxToggle} dataList={task.subTask} titleList={titleList}>\r\n                    <EditIcon fontSize=\"large\" style={{ color: '#FFDD65' }} onClick={() => setOpenEdit(true)}></EditIcon>\r\n                    <DeleteIcon fontSize=\"large\" style={{ color: '#FF5C5C' }} onClick={() => setOpenDelete(true)}></DeleteIcon>\r\n                </List>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\template\\Template.js",["89"],"import React from 'react';\r\nimport './TemplateList.css';\r\nimport './Template.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst Template = (props) => {\r\n    \r\n\r\n    const eachSubTask = (index) => {\r\n        return  <div className=\"nameSubTask\">{index.name}</div>\r\n    }\r\n   \r\n    return (\r\n        <div className=\"template\">\r\n            \r\n            <div className=\"titleTask\">\r\n                <div className=\"nameTask\">{props.item.name}</div>\r\n                <Button className=\"iconeChoose\" aria-label=\"edit\" variant=\"contained\" style={{ padding: \"1px\"}, { backgroundColor:'#2A73CC'}} >Choose</Button >\r\n            </div>\r\n\r\n            <div className=\"titleCategory\">\r\n                <div className=\"nameCategory\" >{props.item.category}</div>\r\n            </div>\r\n\r\n            <div className=\"titleSubTask\">\r\n                {props.item.subTask.map(eachSubTask)}\r\n                {props.children}\r\n                <div className=\"nameSubTask\" ></div>\r\n            </div>\r\n            \r\n        </div>\r\n        )   \r\n    \r\n    \r\n}\r\n\r\nexport default Template;","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Popup.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\List.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\ListItem.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\chat\\Message.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\admin\\AdminTask.js",["90","91"],"import React, {useEffect, useState} from 'react';\r\nimport './AdminTask.css'\r\nimport Menu from \"../shared/Menu\";\r\nimport {ButtonBase, Modal} from \"@material-ui/core\";\r\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Popup from \"../shared/Popup\";\r\n\r\nconst AdminTask = (props) => {\r\n    const [template, setTemplate] = useState([]);\r\n    const [openReview, setOpenReview] = useState(false);\r\n    const [reviewList, setReviewList] = useState([]);\r\n    const [openAddSubTask, setOpenAddSubTask] = useState(false);\r\n    const [nameSubTask, setNameSubTask] = useState(\"\");\r\n    const [task, setTask] = useState(props.location.data);\r\n    \r\n\r\n    useEffect(() => {\r\n        setTask(props.location.data)\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`http://127.0.0.1:3000/api/tasks/${props.location.id}`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                // console.log(result)\r\n                setTemplate(result)})\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetch(`http://127.0.0.1:3000/api/reviews?templateID=${template.templateID}`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                setReviewList(result)\r\n            })\r\n    }, [template])\r\n\r\n    const eachReview = (item) => {\r\n        return (\r\n            <div key={item._id} className={'review-card'}>\r\n                <div className={'card-header'}>\r\n                    {item.title}\r\n                </div>\r\n                <div>\r\n                    {item.reviewBody}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const modalBody = (\r\n        <div className={'review-page'}>\r\n            <ButtonBase className={'modal-close-btn'} onClick={()=>setOpenReview(false)}>\r\n                <CloseRoundedIcon/>\r\n            </ButtonBase>\r\n            <div className={'review-list'}>\r\n                {reviewList.map(eachReview)}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const addNewSubTask = () => {\r\n        const data = { name: nameSubTask };\r\n        fetch(`http://localhost:3000/api/subtasks/${task._id}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setOpenAddSubTask(false);\r\n                setTask(result);\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Menu goBack={true}>\r\n                <ButtonBase centerRipple={true} style={{ backgroundColor:'#2A73CC'}} onClick={()=>setOpenReview(true)}><p style={{width: '100px'}}>Reviews</p></ButtonBase>\r\n                <ButtonBase centerRipple={true}><p style={{width: '200px'}}onClick={()=>setOpenAddSubTask(true)} >Create New Subtask</p></ButtonBase>\r\n            </Menu>\r\n            <Popup onSubmit={addNewSubTask} title={\"Create Subtask\"} open={openAddSubTask}>\r\n                    <TextField className=\"inputNameSubTask\" label=\"Name\"onChange={e => setNameSubTask(e.target.value)}\r\n                        fullWidth value={nameSubTask}>\r\n                    </TextField>\r\n                </Popup>\r\n            <Modal className={'review-modal'} open={openReview} onClose={()=>setOpenReview(false)}>\r\n                {modalBody}\r\n            </Modal>\r\n            <div className={'admin-task-page'}>\r\n                <div className={''}>\r\n                    {template.name}\r\n                </div>\r\n            </div>\r\n        </>)\r\n}\r\n\r\nexport default AdminTask\r\n","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\admin\\AdminHomePage.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":4,"column":21,"nodeType":"98","messageId":"99","endLine":4,"endColumn":32},{"ruleId":"96","severity":1,"message":"100","line":12,"column":7,"nodeType":"98","messageId":"99","endLine":12,"endColumn":14},{"ruleId":"96","severity":1,"message":"101","line":4,"column":22,"nodeType":"98","messageId":"99","endLine":4,"endColumn":32},{"ruleId":"96","severity":1,"message":"102","line":11,"column":10,"nodeType":"98","messageId":"99","endLine":11,"endColumn":21},{"ruleId":"96","severity":1,"message":"103","line":22,"column":26,"nodeType":"98","messageId":"99","endLine":22,"endColumn":41},{"ruleId":"96","severity":1,"message":"104","line":23,"column":28,"nodeType":"98","messageId":"99","endLine":23,"endColumn":45},{"ruleId":"96","severity":1,"message":"105","line":33,"column":22,"nodeType":"98","messageId":"99","endLine":33,"endColumn":33},{"ruleId":"96","severity":1,"message":"106","line":34,"column":26,"nodeType":"98","messageId":"99","endLine":34,"endColumn":41},{"ruleId":"107","severity":1,"message":"108","line":41,"column":8,"nodeType":"109","endLine":41,"endColumn":10,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":164,"column":21,"nodeType":"113","endLine":164,"endColumn":50},{"ruleId":"111","severity":1,"message":"112","line":165,"column":21,"nodeType":"113","endLine":165,"endColumn":48},{"ruleId":"114","severity":1,"message":"115","line":19,"column":111,"nodeType":"116","messageId":"117","endLine":19,"endColumn":112},{"ruleId":"107","severity":1,"message":"108","line":20,"column":8,"nodeType":"109","endLine":20,"endColumn":10,"suggestions":"118"},{"ruleId":"107","severity":1,"message":"119","line":29,"column":8,"nodeType":"109","endLine":29,"endColumn":10,"suggestions":"120"},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","'userID2' is assigned a value but never used.","'IconButton' is defined but never used.","'TramRounded' is defined but never used.","'setOpenEditTask' is assigned a value but never used.","'setOpenDeleteTask' is assigned a value but never used.","'setTaskName' is assigned a value but never used.","'setTaskCategory' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.data'. Either include it or remove the dependency array. If 'setTask' needs the current value of 'props.location.data', you can also switch to useReducer instead of useState and read 'props.location.data' in the reducer.","ArrayExpression",["123"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["124"],"React Hook useEffect has a missing dependency: 'props.location.id'. Either include it or remove the dependency array.",["125"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"126","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [props.location.data]",{"range":"131","text":"132"},{"range":"133","text":"132"},"Update the dependencies array to be: [props.location.id]",{"range":"134","text":"135"},[1599,1601],"[props.location.data]",[781,783],[1049,1051],"[props.location.id]"]