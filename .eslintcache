[{"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\index.js":"1","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Header.js":"2","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Footer.js":"3","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Menu.js":"4","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\homePage\\HomePage.js":"5","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\template\\TemplateList.js":"6","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\chat\\ChatList.js":"7","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\chat\\Chat.js":"8","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\task\\Task.js":"9","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\template\\Template.js":"10","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Popup.js":"11","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\List.js":"12","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\ListItem.js":"13","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\chat\\Message.js":"14","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\admin\\AdminHomePage.js":"15","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\login\\Login.js":"16","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Routers\\router.js":"17","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Routers\\UserRouter.js":"18","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Routers\\AdminRouter.js":"19"},{"size":408,"mtime":1613515502922,"results":"20","hashOfConfig":"21"},{"size":3049,"mtime":1613515502847,"results":"22","hashOfConfig":"21"},{"size":1851,"mtime":1613515374160,"results":"23","hashOfConfig":"21"},{"size":962,"mtime":1612860592223,"results":"24","hashOfConfig":"21"},{"size":2242,"mtime":1613515502829,"results":"25","hashOfConfig":"21"},{"size":2709,"mtime":1613515502891,"results":"26","hashOfConfig":"21"},{"size":4327,"mtime":1613515502819,"results":"27","hashOfConfig":"21"},{"size":2644,"mtime":1613515502808,"results":"28","hashOfConfig":"21"},{"size":13563,"mtime":1613515502882,"results":"29","hashOfConfig":"21"},{"size":1395,"mtime":1612860592226,"results":"30","hashOfConfig":"21"},{"size":1816,"mtime":1612529691366,"results":"31","hashOfConfig":"21"},{"size":636,"mtime":1613515502856,"results":"32","hashOfConfig":"21"},{"size":2472,"mtime":1613515502869,"results":"33","hashOfConfig":"21"},{"size":344,"mtime":1611919993576,"results":"34","hashOfConfig":"21"},{"size":3824,"mtime":1613515502799,"results":"35","hashOfConfig":"21"},{"size":1352,"mtime":1613515502839,"results":"36","hashOfConfig":"21"},{"size":1220,"mtime":1613515502914,"results":"37","hashOfConfig":"21"},{"size":412,"mtime":1613515502907,"results":"38","hashOfConfig":"21"},{"size":547,"mtime":1613515502899,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10ovlwd",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\index.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Header.js",[],["81","82"],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Footer.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Menu.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\homePage\\HomePage.js",["83"],"import React, {useEffect, useState} from 'react';\r\nimport './HomePage.css'\r\nimport Menu from \"../shared/Menu\";\r\nimport {ButtonBase} from \"@material-ui/core\";\r\nimport List from \"../shared/List\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Header from \"../shared/Header\";\r\n\r\nconst HomePage = (props) => {\r\n    const [taskList, setTaskList] = useState([])\r\n    const [titleList, setTitleList] = useState({})\r\n    const [userId] = useState(props.location.userId)\r\n    const [userImg] = useState(props.location.userImg)\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:3000/api/tasks?userID=${userId}`, {credentials: 'include'})\r\n            .then(response => response.json())\r\n            .then(result => setTaskList(result))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(taskList)\r\n        taskList.forEach((task) => {\r\n            setTitleList(prevState => ({\r\n                ...prevState, [task._id]: `${task.name}`\r\n            }));\r\n        })\r\n    }, [taskList])\r\n\r\n    const checkboxToggle = (id, completed) => {\r\n        const body = {completed: completed}\r\n        fetch(`http://localhost:3000/api/tasks/${id}`, {\r\n            headers: {'Content-Type': 'application/json'},\r\n            credentials: 'include',\r\n            method: 'PUT',\r\n            body: JSON.stringify(body)\r\n        })\r\n            .then(response => response.json())\r\n            .then(result => {})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header userImg={userImg}/>\r\n            <Menu goBack={false}>\r\n                <Link to={{pathname: '/new-task', userId: userId}}>\r\n                    <ButtonBase centerRipple={true}><p style={{width: '180px'}}>Create New Task</p></ButtonBase>\r\n                </Link>\r\n                <Link to={{pathname: '/chats', userId: userId}}>\r\n                    <ButtonBase centerRipple={true} onClick={null} style={{backgroundColor: '#2A73CC'}}><p\r\n                        style={{width: '100px'}}>Chat</p></ButtonBase>\r\n                </Link>\r\n            </Menu>\r\n            <div className={'task-list'}>\r\n                <List checkboxes={true} checkboxToggle={checkboxToggle} userId={userId} dataList={taskList}\r\n                      titleList={titleList} pathName={'/task'}/>\r\n            </div>\r\n        </>)\r\n}\r\n\r\nexport default HomePage","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\template\\TemplateList.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\chat\\ChatList.js",["84","85"],"import React, {useEffect, useState} from 'react';\r\nimport './ChatList.css'\r\nimport Menu from \"../shared/Menu\";\r\nimport {ButtonBase} from \"@material-ui/core\";\r\nimport List from \"../shared/List\";\r\nimport Popup from \"../shared/Popup\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Header from \"../shared/Header\";\r\n\r\n// const userId = '106859904573047383930'\r\n\r\nconst ChatList = (props) => {\r\n    const [chatList, setChatList] = useState([]);\r\n    const [titleList, setTitleList] = useState({});\r\n    const [open, setOpen] = useState(false);\r\n    const [emailList, setEmailList] = useState([]);\r\n    const [emailValue, setEmailValue] = useState(null);\r\n    const [userId] = useState(props.location.userId)\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:3000/api/chats?userID=${userId}`, {credentials: 'include'})\r\n            .then(response => response.json())\r\n            .then(result => setChatList(result))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(chatList)\r\n        fetch(`http://localhost:3000/api/users`, {credentials: 'include'})\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                result.forEach(user => {\r\n                    setEmailList(prevArray => [...prevArray, {title: user['email']}])\r\n                })\r\n            })\r\n    }, [chatList])\r\n\r\n    useEffect(() => {\r\n        let users = []\r\n        chatList.forEach(chat => {\r\n            if (chat['userID1'] === userId)\r\n                users.push(chat['userID2'])\r\n            else\r\n                users.push(chat['userID1'])\r\n        })\r\n\r\n        users.forEach((user, index) => {\r\n            console.log(user)\r\n            fetch(`http://localhost:3000/api/users/${user}`, {credentials: 'include'})\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    console.log(result)\r\n                    setTitleList(prevState => ({\r\n                        ...prevState, [chatList[index]._id]: `${result.firstName} ${result.lastName}`\r\n                    }));\r\n                })\r\n        })\r\n    }, [chatList])\r\n\r\n    const addNewChat = () => {\r\n        fetch(`http://localhost:3000/api/users?email=${emailValue.title}`, {credentials: 'include'})\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                const body = {userID1: userId, userID2: result['_id']};\r\n                fetch(`http://localhost:3000/api/chats/`, {\r\n                    method: 'POST',\r\n                    credentials: 'include',\r\n                    headers: {'Content-Type': 'application/json'},\r\n                    body: JSON.stringify(body),\r\n                })\r\n                    .then(response => response.json())\r\n                    .then(result => {\r\n                        setOpen(false)\r\n                        setChatList(result)\r\n                    });\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header userId={userId}/>\r\n            <Menu goBack={true} reroute={{pathname: '/dashboard', userId: userId}}>\r\n                <ButtonBase centerRipple={true} onClick={() => setOpen(true)}>\r\n                    <p style={{width: '150px'}}>New Chat</p>\r\n                </ButtonBase>\r\n            </Menu>\r\n            <div className={'chat-list-page'}>\r\n                <div className={'chat-list'}>\r\n                    <List dataList={chatList} userId={userId} titleList={titleList} pathName={'/chat'}/>\r\n                </div>\r\n                <Popup onSubmit={addNewChat} closePopup={() => setOpen(false)} title={\"New Chat\"} open={open}\r\n                       isDelete={false}>\r\n                    <p>open a new chat with another TaskIt user</p>\r\n                    <Autocomplete\r\n                        style={{width: '100%', paddingTop: '5%'}}\r\n                        options={emailList} getOptionLabel={(emailList) => emailList.title} value={emailValue}\r\n                        onChange={(e, newValue) => {\r\n                            setEmailValue(newValue)\r\n                        }}\r\n                        renderInput={(params) => <TextField {...params} label=\"Email\"/>}/>\r\n                </Popup>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatList","C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\chat\\Chat.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\task\\Task.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\template\\Template.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\Popup.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\List.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\shared\\ListItem.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\chat\\Message.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\admin\\AdminHomePage.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Components\\login\\Login.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Routers\\router.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Routers\\UserRouter.js",[],"C:\\Users\\danit\\Documents\\Danit's Documents\\Shenkar\\Third year\\First Semester\\Distributed Cloud Services\\TaskIt_client\\src\\Routers\\AdminRouter.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":19,"column":8,"nodeType":"92","endLine":19,"endColumn":10,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"91","line":25,"column":8,"nodeType":"92","endLine":25,"endColumn":10,"suggestions":"94"},{"ruleId":"90","severity":1,"message":"91","line":58,"column":8,"nodeType":"92","endLine":58,"endColumn":18,"suggestions":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["98"],["99"],["100"],"no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"101","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [userId]",{"range":"106","text":"107"},{"range":"108","text":"107"},"Update the dependencies array to be: [chatList, userId]",{"range":"109","text":"110"},[743,745],"[userId]",[1001,1003],[2161,2171],"[chatList, userId]"]